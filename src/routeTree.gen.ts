/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OrdersImport } from './routes/orders'
import { Route as IndexImport } from './routes/index'
import { Route as CreatorIndexImport } from './routes/creator/index'
import { Route as CategoriesIndexImport } from './routes/categories/index'
import { Route as CreatorFormImport } from './routes/creator/form'
import { Route as CreatorCongratulationsImport } from './routes/creator/congratulations'
import { Route as CreatorCategoryIdImport } from './routes/creator/$categoryId'
import { Route as CategoriesCategoryIdImport } from './routes/categories/$categoryId'

// Create/Update Routes

const OrdersRoute = OrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CreatorIndexRoute = CreatorIndexImport.update({
  id: '/creator/',
  path: '/creator/',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesIndexRoute = CategoriesIndexImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => rootRoute,
} as any)

const CreatorFormRoute = CreatorFormImport.update({
  id: '/creator/form',
  path: '/creator/form',
  getParentRoute: () => rootRoute,
} as any)

const CreatorCongratulationsRoute = CreatorCongratulationsImport.update({
  id: '/creator/congratulations',
  path: '/creator/congratulations',
  getParentRoute: () => rootRoute,
} as any)

const CreatorCategoryIdRoute = CreatorCategoryIdImport.update({
  id: '/creator/$categoryId',
  path: '/creator/$categoryId',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesCategoryIdRoute = CategoriesCategoryIdImport.update({
  id: '/categories/$categoryId',
  path: '/categories/$categoryId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersImport
      parentRoute: typeof rootRoute
    }
    '/categories/$categoryId': {
      id: '/categories/$categoryId'
      path: '/categories/$categoryId'
      fullPath: '/categories/$categoryId'
      preLoaderRoute: typeof CategoriesCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/creator/$categoryId': {
      id: '/creator/$categoryId'
      path: '/creator/$categoryId'
      fullPath: '/creator/$categoryId'
      preLoaderRoute: typeof CreatorCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/creator/congratulations': {
      id: '/creator/congratulations'
      path: '/creator/congratulations'
      fullPath: '/creator/congratulations'
      preLoaderRoute: typeof CreatorCongratulationsImport
      parentRoute: typeof rootRoute
    }
    '/creator/form': {
      id: '/creator/form'
      path: '/creator/form'
      fullPath: '/creator/form'
      preLoaderRoute: typeof CreatorFormImport
      parentRoute: typeof rootRoute
    }
    '/categories/': {
      id: '/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/creator/': {
      id: '/creator/'
      path: '/creator'
      fullPath: '/creator'
      preLoaderRoute: typeof CreatorIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/orders': typeof OrdersRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/creator/$categoryId': typeof CreatorCategoryIdRoute
  '/creator/congratulations': typeof CreatorCongratulationsRoute
  '/creator/form': typeof CreatorFormRoute
  '/categories': typeof CategoriesIndexRoute
  '/creator': typeof CreatorIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/orders': typeof OrdersRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/creator/$categoryId': typeof CreatorCategoryIdRoute
  '/creator/congratulations': typeof CreatorCongratulationsRoute
  '/creator/form': typeof CreatorFormRoute
  '/categories': typeof CategoriesIndexRoute
  '/creator': typeof CreatorIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/orders': typeof OrdersRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/creator/$categoryId': typeof CreatorCategoryIdRoute
  '/creator/congratulations': typeof CreatorCongratulationsRoute
  '/creator/form': typeof CreatorFormRoute
  '/categories/': typeof CategoriesIndexRoute
  '/creator/': typeof CreatorIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/orders'
    | '/categories/$categoryId'
    | '/creator/$categoryId'
    | '/creator/congratulations'
    | '/creator/form'
    | '/categories'
    | '/creator'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/orders'
    | '/categories/$categoryId'
    | '/creator/$categoryId'
    | '/creator/congratulations'
    | '/creator/form'
    | '/categories'
    | '/creator'
  id:
    | '__root__'
    | '/'
    | '/orders'
    | '/categories/$categoryId'
    | '/creator/$categoryId'
    | '/creator/congratulations'
    | '/creator/form'
    | '/categories/'
    | '/creator/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrdersRoute: typeof OrdersRoute
  CategoriesCategoryIdRoute: typeof CategoriesCategoryIdRoute
  CreatorCategoryIdRoute: typeof CreatorCategoryIdRoute
  CreatorCongratulationsRoute: typeof CreatorCongratulationsRoute
  CreatorFormRoute: typeof CreatorFormRoute
  CategoriesIndexRoute: typeof CategoriesIndexRoute
  CreatorIndexRoute: typeof CreatorIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrdersRoute: OrdersRoute,
  CategoriesCategoryIdRoute: CategoriesCategoryIdRoute,
  CreatorCategoryIdRoute: CreatorCategoryIdRoute,
  CreatorCongratulationsRoute: CreatorCongratulationsRoute,
  CreatorFormRoute: CreatorFormRoute,
  CategoriesIndexRoute: CategoriesIndexRoute,
  CreatorIndexRoute: CreatorIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/orders",
        "/categories/$categoryId",
        "/creator/$categoryId",
        "/creator/congratulations",
        "/creator/form",
        "/categories/",
        "/creator/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/orders": {
      "filePath": "orders.tsx"
    },
    "/categories/$categoryId": {
      "filePath": "categories/$categoryId.tsx"
    },
    "/creator/$categoryId": {
      "filePath": "creator/$categoryId.tsx"
    },
    "/creator/congratulations": {
      "filePath": "creator/congratulations.tsx"
    },
    "/creator/form": {
      "filePath": "creator/form.tsx"
    },
    "/categories/": {
      "filePath": "categories/index.tsx"
    },
    "/creator/": {
      "filePath": "creator/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
